let getUser,md5,message,constants,jwt;_989‍.x([["loginController",()=>loginController]]);_989‍.w("../service/login.service",[["getUser",["getUser"],function(v){getUser=v}]]);_989‍.w("md5",[["default",["md5"],function(v){md5=v}]]);_989‍.w("./../helpers/constant",[["message",["message"],function(v){message=v}],["constants",["constants"],function(v){constants=v}]]);_989‍.w("jsonwebtoken",[["default",["jwt"],function(v){jwt=v}]]);




       const loginController = async (req, res) => {
    try {
        let user_name = req.body.user_name
        let password = req.body.password
        const user = await getUser({ user_name: user_name, password: md5(password), del_flag: 0 })
        if (!user) {
            return res.json({
                result: false,
                message: message.MSG001,
            })
        }
        const token = await jwt.sign({ _id: user._id, user_name: user.user_name, role: user.role, del_flag: 0 }, constants.ACCESS_TOKEN_KEY);
        return res.json({
            result: true,
            user,
            token
        })
    } catch (error) {
        _989‍.g.console.log(error)
        return res.json({ result: false, message: message.MSG002, status: 0 })
    }
}